<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.appinfo.dao.app.AppInfoMapper">
	
	<select id="getAppInfoById" resultType="AppInfo">
		select a.*,(select devName from dev_user where id = a.devId) as devName,
				(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
				(select valueName from data_dictionary d where  a.flatformId=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
				(select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
				(select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
				(select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
				(select v.versionNo from app_version v where v.appId=a.id order by creationDate DESC limit 0,1) as versionNo,
				(select v.id from app_version v where v.appId=a.id order by creationDate DESC limit 0,1) as versionId,
				(select v.versionSize from app_version v where v.appId=a.id order by creationDate DESC limit 0,1)as softwareSize
		from  app_info a where id=#{id}
	</select>

	<select id="getAppInfoCount" resultType="int">
		SELECT COUNT(id) FROM app_info
		<where>
			<if test="softName != null ">AND softwareName LIKE CONCAT('%',#{softName},'%')</if>
			<if test="status != null">AND status = #{status}</if>
			<if test="flatformId != null">AND flatformId = #{flatformId}</if>
			<if test="cid1 != null">AND categoryLevel1 = #{cid1}</if>
			<if test="cid2 != null">AND categoryLevel2 = #{cid2}</if>
			<if test="cid2 != null">AND categoryLevel3 = #{cid3}</if>
		</where>
	</select>
	
	<select id="getAppinfoList" resultType="AppInfo">
		select a.*,(select devName from dev_user where id = a.devId) as devName,
				(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
				(select valueName from data_dictionary d where  a.flatformId=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
				(select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
				(select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
				(select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
				(select v.versionNo from app_version v where v.appId=a.id order by creationDate DESC limit 0,1) as versionNo,
				(select v.id from app_version v where v.appId=a.id order by creationDate DESC limit 0,1) as versionId,
				(select v.versionSize from app_version v where v.appId=a.id order by creationDate DESC limit 0,1)as softwareSize
		from  app_info a
		<where>
			<if test="softName != null ">AND softwareName LIKE CONCAT('%',#{softName},'%')</if>
			<if test="status != null">AND status = #{status}</if>
			<if test="flatformId != null">AND flatformId = #{flatformId}</if>
			<if test="cid1 != null">AND categoryLevel1 = #{cid1}</if>
			<if test="cid2 != null">AND categoryLevel2 = #{cid2}</if>
			<if test="cid2 != null">AND categoryLevel3 = #{cid3}</if>
			<if test="devId != null">AND devId = #{devId}</if>
		</where>
		ORDER BY creationDate DESC
		LIMIT #{offset},#{rows}
	</select>
	
	<select id="checkAPKName" resultType="int">
		select count(id) from app_info where APKName = #{APKName}
	</select>
	
	<insert id="saveAppInfo" parameterType="AppInfo">
		insert  app_info (softwareName,APKName,supportROM,interfaceLanguage,updateDate,softwareSize,
							devId,appInfo,status,onSaleDate,offSaleDate,categoryLevel1,categoryLevel2,
							categoryLevel3,downloads,flatformId,logoPicPath,logoLocPath,createdBy,creationDate)
				values(#{softwareName},#{APKName},#{supportROM},#{interfaceLanguage},#{updateDate},
					   #{softwareSize},#{devId},#{appInfo},#{status},#{onSaleDate},#{offSaleDate},
					   #{categoryLevel1},#{categoryLevel2},#{categoryLevel3},#{downloads},
					   #{flatformId},#{logoPicPath},#{logoLocPath},#{createdBy},now()) 
	</insert>
	
	<update id="modify" parameterType="AppInfo">
		update app_info
		<trim prefix="set" suffixOverrides="," suffix="where id=#{id}">
			<if test="softwareName != null">softwareName=#{softwareName},</if>
			<if test="supportROM != null">supportROM=#{supportROM},</if>
			<if test="interfaceLanguage != null">interfaceLanguage=#{interfaceLanguage},</if>
			<if test="updateDate != null">updateDate=#{updateDate},</if>
			<if test="softwareSize != null">softwareSize=#{softwareSize},</if>
			<if test="appInfo != null">appInfo=#{appInfo},</if>
			<if test="status != null">status=#{status},</if>
			<if test="onSaleDate != null">onSaleDate=#{onSaleDate},</if>
			<if test="offSaleDate != null">offSaleDate=#{offSaleDate},</if>
			<if test="categoryLevel1 != null">categoryLevel1=#{categoryLevel1},</if>
			<if test="categoryLevel2 != null">categoryLevel2=#{categoryLevel2},</if>
			<if test="categoryLevel3 != null">categoryLevel3=#{categoryLevel3},</if>
			<if test="downloads != null">downloads=#{downloads},</if>
			<if test="flatformId != null">flatformId=#{flatformId},</if>
			<if test="logoPicPath != null">logoPicPath=#{logoPicPath},</if>
			<if test="logoLocPath != null">logoLocPath=#{logoLocPath},</if>
			<if test="modifyBy != null">modifyBy=#{modifyBy},</if>
			<if test="modifyDate == null">modifyDate=now(),</if>
		</trim>
	</update>
	
	<delete id="deleteAppInfoById" >
		delete from app_info where id = #{id}
	</delete>
	
	<update id="deleteAppLogo">
		update app_info 
			set logoPicPath=null,
				logoLocPath = null 
			where id = #{id}
	</update>
	<update id="updateSatus">
		update app_info 
			set status=#{status}
			where id = #{id}
	</update>
</mapper>